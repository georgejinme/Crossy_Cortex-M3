<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\rvmdk\Experiment.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\rvmdk\Experiment.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 644]: Last Updated: Tue Jun 16 19:21:04 2015
<BR><P>
<H3>Maximum Stack Usage =        320 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
scoreQueryButtonClick &rArr; gpaSound &rArr; WaveOpen &rArr; f_open &rArr; trace_path &rArr; next_dir_entry &rArr; get_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[28]">Reset_Handler</a>
 <LI><a href="#[11]">NmiSR</a>
 <LI><a href="#[12]">FaultISR</a>
 <LI><a href="#[13]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6f]">UARTCharPut</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6f]">UARTCharPut</a><BR>
 <LI><a href="#[70]">UARTCharGet</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[70]">UARTCharGet</a><BR>
 <LI><a href="#[c7]">SSIDataPut</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c7]">SSIDataPut</a><BR>
 <LI><a href="#[c8]">SSIDataGet</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c8]">SSIDataGet</a><BR>
 <LI><a href="#[6c]">UARTDisable</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6c]">UARTDisable</a><BR>
 <LI><a href="#[6d]">UARTConfigSetExpClk</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6d]">UARTConfigSetExpClk</a><BR>
 <LI><a href="#[2c]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">SysCtlDelay</a><BR>
 <LI><a href="#[11]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">NmiSR</a><BR>
 <LI><a href="#[12]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">FaultISR</a><BR>
 <LI><a href="#[13]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1d]">BufferCallback</a> from sound.o(.text) referenced 4 times from sound.o(.text)
 <LI><a href="#[0]">CanvasMsgProc</a> from canvas.o(i.CanvasMsgProc) referenced 22 times from main.o(.data)
 <LI><a href="#[8]">ContainerMsgProc</a> from container.o(i.ContainerMsgProc) referenced 2 times from main.o(.data)
 <LI><a href="#[12]">FaultISR</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[1e]">GrDefaultStringRenderer</a> from string.o(i.GrDefaultStringRenderer) referenced from context.o(i.GrContextInit)
 <LI><a href="#[27]">GrMapISO8859_1_Unicode</a> from charmap.o(i.GrMapISO8859_1_Unicode) referenced 2 times from context.o(.constdata)
 <LI><a href="#[13]">IntDefaultHandler</a> from startup.o(RESET) referenced 59 times from startup.o(RESET)
 <LI><a href="#[25]">Kitronix320x240x16_SSD2119ColorTranslate</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.constdata)
 <LI><a href="#[26]">Kitronix320x240x16_SSD2119Flush</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.constdata)
 <LI><a href="#[22]">Kitronix320x240x16_SSD2119LineDrawH</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.constdata)
 <LI><a href="#[23]">Kitronix320x240x16_SSD2119LineDrawV</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.constdata)
 <LI><a href="#[20]">Kitronix320x240x16_SSD2119PixelDraw</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.constdata)
 <LI><a href="#[21]">Kitronix320x240x16_SSD2119PixelDrawMultiple</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.constdata)
 <LI><a href="#[24]">Kitronix320x240x16_SSD2119RectFill</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.constdata)
 <LI><a href="#[11]">NmiSR</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[6]">RadioButtonMsgProc</a> from radiobutton.o(i.RadioButtonMsgProc) referenced 8 times from main.o(.data)
 <LI><a href="#[6]">RadioButtonMsgProc</a> from radiobutton.o(i.RadioButtonMsgProc) referenced from radiobutton.o(i.RadioButtonClick)
 <LI><a href="#[1]">RectangularButtonMsgProc</a> from pushbutton.o(i.RectangularButtonMsgProc) referenced 16 times from main.o(.data)
 <LI><a href="#[28]">Reset_Handler</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[16]">SoundIntHandler</a> from sound.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[14]">SysTickHandler</a> from main.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[15]">TouchScreenIntHandler</a> from touch.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[f]">WidgetDefaultMsgProc</a> from widget.o(i.WidgetDefaultMsgProc) referenced 2 times from widget.o(.data)
 <LI><a href="#[18]">WidgetPointerMessage</a> from widget.o(i.WidgetPointerMessage) referenced from main.o(.text)
 <LI><a href="#[1a]">WriteCommandEPI</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.text)
 <LI><a href="#[1c]">WriteCommandFPGA</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.text)
 <LI><a href="#[e]">WriteCommandGPIO</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced 2 times from kitronix320x240x16_ssd2119_8bit.o(.data)
 <LI><a href="#[19]">WriteDataEPI</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.text)
 <LI><a href="#[1b]">WriteDataFPGA</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.text)
 <LI><a href="#[d]">WriteDataGPIO</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced 2 times from kitronix320x240x16_ssd2119_8bit.o(.data)
 <LI><a href="#[1f]">_sputc</a> from printf0.o(i._sputc) referenced from printf0.o(i.__0sprintf$0)
 <LI><a href="#[3]">booksQueryButtonClick</a> from main.o(.text) referenced 2 times from main.o(.data)
 <LI><a href="#[4]">busQueryButtonClick</a> from main.o(.text) referenced 2 times from main.o(.data)
 <LI><a href="#[5]">ecardQueryButtonClick</a> from main.o(.text) referenced 2 times from main.o(.data)
 <LI><a href="#[17]">main</a> from main.o(.text) referenced from entry7.o(.ARM.Collect$$$$00000007)
 <LI><a href="#[c]">schoolBusPicture</a> from main.o(.text) referenced 2 times from main.o(.data)
 <LI><a href="#[2]">scoreQueryButtonClick</a> from main.o(.text) referenced 2 times from main.o(.data)
 <LI><a href="#[7]">semesterChoose</a> from main.o(.text) referenced 8 times from main.o(.data)
 <LI><a href="#[9]">showBooksData</a> from main.o(.text) referenced 2 times from main.o(.data)
 <LI><a href="#[b]">showMinhang2xuhui</a> from main.o(.text) referenced 2 times from main.o(.data)
 <LI><a href="#[a]">showNextBook</a> from main.o(.text) referenced 2 times from main.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[29]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[ef]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d6]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[f0]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[eb]"></a>WidgetMutexGet</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, widget.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
</UL>

<P><STRONG><a name="[2c]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BInit
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaughterBoardTypeGet
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROMReadPolled
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGPIOLCDInterface
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandFPGA
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataFPGA
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinoutSet
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kitronix320x240x16_SSD2119Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0MasterInitial
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>BufferCallback</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, main.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[2d]"></a>WaveOpen</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = WaveOpen &rArr; f_open &rArr; trace_path &rArr; next_dir_entry &rArr; get_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundSetFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecardSound
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpaSound
</UL>

<P><STRONG><a name="[32]"></a>WaveClose</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[34]"></a>Convert8Bit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveRead
</UL>

<P><STRONG><a name="[f1]"></a>WaveStop</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>WaveRead</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WaveRead &rArr; f_read &rArr; get_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Convert8Bit
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WavePlay
</UL>

<P><STRONG><a name="[35]"></a>WavePlay</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = WavePlay &rArr; WaveRead &rArr; f_read &rArr; get_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueProcess
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundBufferPlay
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDisable
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0DeviceRefresh
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveRead
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecardSound
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpaSound
</UL>

<P><STRONG><a name="[14]"></a>SysTickHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_timerproc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>gpaSound</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = gpaSound &rArr; WaveOpen &rArr; f_open &rArr; trace_path &rArr; next_dir_entry &rArr; get_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WavePlay
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scoreQueryButtonClick
</UL>

<P><STRONG><a name="[2]"></a>scoreQueryButtonClick</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = scoreQueryButtonClick &rArr; gpaSound &rArr; WaveOpen &rArr; f_open &rArr; trace_path &rArr; next_dir_entry &rArr; get_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetRemove
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetAdd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStringPut
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStringGet
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0DeviceRefresh
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpaSound
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>semesterChoose</STRONG> (Thumb, 570 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = semesterChoose &rArr; UARTStringPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStringPut
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStringGet
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>booksQueryButtonClick</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = booksQueryButtonClick &rArr; WidgetMessageQueueAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetRemove
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetAdd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStringPut
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>showBooksData</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = showBooksData &rArr; WidgetMessageQueueAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStringPut
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStringGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>showNextBook</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = showNextBook &rArr; WidgetMessageQueueAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStringPut
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStringGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>busQueryButtonClick</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = busQueryButtonClick &rArr; WidgetMessageQueueAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetRemove
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetAdd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStringPut
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>showMinhang2xuhui</STRONG> (Thumb, 1040 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = showMinhang2xuhui &rArr; UARTStringPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStringPut
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>schoolBusPicture</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = schoolBusPicture &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStringPut
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrImageDraw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[47]"></a>ecardSound</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ecardSound &rArr; WaveOpen &rArr; f_open &rArr; trace_path &rArr; next_dir_entry &rArr; get_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WavePlay
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecardQueryButtonClick
</UL>

<P><STRONG><a name="[5]"></a>ecardQueryButtonClick</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = ecardQueryButtonClick &rArr; ecardSound &rArr; WaveOpen &rArr; f_open &rArr; trace_path &rArr; next_dir_entry &rArr; get_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetRemove
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetAdd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStringPut
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStringGet
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0DeviceRefresh
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecardSound
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>main</STRONG> (Thumb, 256 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = main &rArr; PopulateFileListBox &rArr; f_opendir &rArr; trace_path &rArr; next_dir_entry &rArr; get_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueProcess
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetAdd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStringPut
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Initial
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenCallbackSet
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickInitial
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundVolumeSet
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinoutSet
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kitronix320x240x16_SSD2119Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0MasterInitial
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0DeviceRefresh
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextInit
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOInitial
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopulateFileListBox
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[4a]"></a>Kitronix320x240x16_SSD2119Init</STRONG> (Thumb, 562 bytes, Stack size 24 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Kitronix320x240x16_SSD2119Init &rArr; InitGPIOLCDInterface
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGPIOLCDInterface
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>PinoutSet</STRONG> (Thumb, 204 bytes, Stack size 56 bytes, set_pinout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = PinoutSet &rArr; EPIPinConfigSet &rArr; HB8ConfigGet
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortControlSet
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaughterBoardTypeGet
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15]"></a>TouchScreenIntHandler</STRONG> (Thumb, 358 bytes, Stack size 32 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TouchScreenIntHandler &rArr; TouchScreenDebouncer
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenDebouncer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TouchScreenInit</STRONG> (Thumb, 314 bytes, Stack size 24 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TouchScreenInit
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>TouchScreenCallbackSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>SysTickInitial</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, systickconfigure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTickInitial
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickPeriodSet
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>UART0Initial</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, uartconfigure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART0Initial &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEnable
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTDisable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>UARTStringPut</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, uartconfigure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTStringPut
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterTransmit_Burst_2Bytes
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecardQueryButtonClick
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;schoolBusPicture
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showMinhang2xuhui
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;busQueryButtonClick
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showNextBook
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showBooksData
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;booksQueryButtonClick
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semesterChoose
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scoreQueryButtonClick
</UL>

<P><STRONG><a name="[41]"></a>UARTStringGet</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, uartconfigure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTStringGet
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecardQueryButtonClick
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showNextBook
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showBooksData
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semesterChoose
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scoreQueryButtonClick
</UL>

<P><STRONG><a name="[74]"></a>LEDOff</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gpiodriverconfigure.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOInitial
</UL>

<P><STRONG><a name="[4e]"></a>GPIOInitial</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, gpiodriverconfigure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIOInitial &rArr; GPIOPinTypeUART
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2C
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOff
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f2]"></a>LEDOn</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gpiodriverconfigure.o(.text), UNUSED)

<P><STRONG><a name="[f3]"></a>LEDOverturn</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gpiodriverconfigure.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>KeyPress</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, gpiodriverconfigure.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>I2CMasterTransmit_Burst_2Bytes</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, i2cconfigure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2CMasterTransmit_Burst_2Bytes &rArr; UARTStringPut
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterSlaveAddrSet
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterDataPut
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterControl
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterBusy
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterErr
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStringPut
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0MasterInitial
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0DeviceRefresh
</UL>

<P><STRONG><a name="[51]"></a>I2C0MasterInitial</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, i2cconfigure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2C0MasterInitial &rArr; I2CMasterTransmit_Burst_2Bytes &rArr; UARTStringPut
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterInitExpClk
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterEnable
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterTransmit_Burst_2Bytes
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>I2CMasterSpeedSet</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, i2cconfigure.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>

<P><STRONG><a name="[3a]"></a>I2C0DeviceRefresh</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, i2cconfigure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C0DeviceRefresh &rArr; I2CMasterTransmit_Burst_2Bytes &rArr; UARTStringPut
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NixieTubeCoding
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterTransmit_Burst_2Bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecardQueryButtonClick
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scoreQueryButtonClick
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WavePlay
</UL>

<P><STRONG><a name="[7f]"></a>NixieTubeCoding</STRONG> (Thumb, 306 bytes, Stack size 12 bytes, nixietubeconfigure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NixieTubeCoding
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0DeviceRefresh
</UL>

<P><STRONG><a name="[38]"></a>SoundBufferPlay</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, sound.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SoundBufferPlay &rArr; uDMAChannelTransferSet
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAChannelTransferSet
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAChannelEnable
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2STxEnable
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundPlay
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BufferCallback
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WavePlay
</UL>

<P><STRONG><a name="[54]"></a>SoundInit</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, sound.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SoundInit &rArr; TLV320AIC23BInit &rArr; TLV320AIC23BLineInVolumeSet &rArr; TLV320AIC23BWriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAChannelAttributeDisable
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BInit
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralReset
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2STxRxEnable
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2STxFIFOLimitSet
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2STxEnable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2SRxFIFOLimitSet
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2SIntClear
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2S
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16]"></a>SoundIntHandler</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, sound.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SoundIntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAChannelModeGet
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2SIntStatus
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2SIntClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SoundSetFormat</STRONG> (Thumb, 472 bytes, Stack size 32 bytes, sound.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SoundSetFormat &rArr; SysCtlI2SMClkSet
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAChannelControlSet
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAChannelAttributeEnable
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlI2SMClkSet
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2STxConfigSet
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2SRxConfigSet
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2SMasterClockSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundPlay
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveOpen
</UL>

<P><STRONG><a name="[96]"></a>SoundPlay</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, sound.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundNextTone
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundSetFormat
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundBufferPlay
</UL>

<P><STRONG><a name="[f5]"></a>SoundSampleRateGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sound.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>SoundBufferRead</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, sound.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAChannelTransferSet
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAChannelEnable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAChannelAttributeEnable
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2SRxEnable
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDisable
</UL>

<P><STRONG><a name="[55]"></a>SoundVolumeSet</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sound.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SoundVolumeSet &rArr; TLV320AIC23BHeadPhoneVolumeSet &rArr; TLV320AIC23BWriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BHeadPhoneVolumeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundVolumeUp
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundVolumeDown
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9a]"></a>SoundVolumeDown</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sound.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundVolumeSet
</UL>

<P><STRONG><a name="[f6]"></a>SoundVolumeGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sound.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>SoundVolumeUp</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sound.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundVolumeSet
</UL>

<P><STRONG><a name="[52]"></a>f_mount</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = f_mount
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e]"></a>f_open</STRONG> (Thumb, 306 bytes, Stack size 80 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = f_open &rArr; trace_path &rArr; next_dir_entry &rArr; get_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_mount
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reserve_direntry
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_path
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveOpen
</UL>

<P><STRONG><a name="[2f]"></a>f_read</STRONG> (Thumb, 336 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = f_read &rArr; get_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cluster
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveRead
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveOpen
</UL>

<P><STRONG><a name="[b4]"></a>f_write</STRONG> (Thumb, 370 bytes, Stack size 40 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[b5]"></a>f_sync</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = f_sync &rArr; sync &rArr; disk_ioctl &rArr; power_on &rArr; send_initial_clock_train &rArr; GPIOPinTypeSSI
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[30]"></a>f_close</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = f_close &rArr; f_sync &rArr; sync &rArr; disk_ioctl &rArr; power_on &rArr; send_initial_clock_train &rArr; GPIOPinTypeSSI
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WavePlay
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveClose
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveOpen
</UL>

<P><STRONG><a name="[b6]"></a>f_lseek</STRONG> (Thumb, 258 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cluster
</UL>

<P><STRONG><a name="[56]"></a>f_opendir</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = f_opendir &rArr; trace_path &rArr; next_dir_entry &rArr; get_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_mount
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_path
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopulateFileListBox
</UL>

<P><STRONG><a name="[57]"></a>f_readdir</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = f_readdir &rArr; next_dir_entry &rArr; get_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_dir_entry
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopulateFileListBox
</UL>

<P><STRONG><a name="[b8]"></a>f_stat</STRONG> (Thumb, 60 bytes, Stack size 64 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_mount
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_path
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
</UL>

<P><STRONG><a name="[b9]"></a>f_getfree</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_mount
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cluster
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[ba]"></a>f_unlink</STRONG> (Thumb, 186 bytes, Stack size 56 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_mount
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_path
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_dir_entry
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[bb]"></a>f_mkdir</STRONG> (Thumb, 292 bytes, Stack size 80 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_mount
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reserve_direntry
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_path
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[bd]"></a>f_chmod</STRONG> (Thumb, 72 bytes, Stack size 64 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_mount
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_path
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[be]"></a>f_rename</STRONG> (Thumb, 176 bytes, Stack size 88 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_mount
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reserve_direntry
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_path
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[c2]"></a>TLV320AIC23BLineInVolumeSet</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, tlv320aic23b.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TLV320AIC23BLineInVolumeSet &rArr; TLV320AIC23BWriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BWriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BInit
</UL>

<P><STRONG><a name="[99]"></a>TLV320AIC23BHeadPhoneVolumeSet</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, tlv320aic23b.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TLV320AIC23BHeadPhoneVolumeSet &rArr; TLV320AIC23BWriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BWriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BInit
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundVolumeSet
</UL>

<P><STRONG><a name="[88]"></a>TLV320AIC23BInit</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, tlv320aic23b.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TLV320AIC23BInit &rArr; TLV320AIC23BLineInVolumeSet &rArr; TLV320AIC23BWriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BLineInVolumeSet
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BWriteRegister
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BHeadPhoneVolumeSet
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterInitExpClk
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2C
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
</UL>

<P><STRONG><a name="[f7]"></a>TLV320AIC23BHeadPhoneVolumeGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tlv320aic23b.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>disk_initialize</STRONG> (Thumb, 338 bytes, Stack size 32 bytes, mmc-dk-lm3s9b96.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = disk_initialize &rArr; power_on &rArr; send_initial_clock_train &rArr; GPIOPinTypeSSI
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIEnable
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDisable
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIConfigSetExpClk
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DESELECT
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SELECT
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_initial_clock_train
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_mount
</UL>

<P><STRONG><a name="[ae]"></a>disk_status</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mmc-dk-lm3s9b96.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_mount
</UL>

<P><STRONG><a name="[9e]"></a>disk_read</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, mmc-dk-lm3s9b96.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = disk_read &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_spi
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DESELECT
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SELECT
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_datablock
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>

<P><STRONG><a name="[9d]"></a>disk_write</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, mmc-dk-lm3s9b96.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DESELECT
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SELECT
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_datablock
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reserve_direntry
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>

<P><STRONG><a name="[a0]"></a>disk_ioctl</STRONG> (Thumb, 316 bytes, Stack size 32 bytes, mmc-dk-lm3s9b96.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = disk_ioctl &rArr; power_on &rArr; send_initial_clock_train &rArr; GPIOPinTypeSSI
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ready
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DESELECT
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SELECT
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_datablock
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[3c]"></a>disk_timerproc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mmc-dk-lm3s9b96.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
</UL>

<P><STRONG><a name="[b1]"></a>get_fattime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mmc-dk-lm3s9b96.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>

<P><STRONG><a name="[f8]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[f9]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_dirfile
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[fa]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[fb]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reserve_direntry
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[af]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_mount
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
</UL>

<P><STRONG><a name="[fc]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>_memset$wrapper</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[58]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopulateFileListBox
</UL>

<P><STRONG><a name="[a9]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_path
</UL>

<P><STRONG><a name="[2b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[fd]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[fe]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[ff]"></a>__decompress1</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[0]"></a>CanvasMsgProc</STRONG> (Thumb, 438 bytes, Stack size 72 bytes, canvas.o(i.CanvasMsgProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = CanvasMsgProc &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetDefaultMsgProc
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringWidthGet
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectFill
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontHeightGet
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextClipRegionSet
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrImageDraw
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextInit
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>ContainerMsgProc</STRONG> (Thumb, 364 bytes, Stack size 72 bytes, container.o(i.ContainerMsgProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ContainerMsgProc &rArr; GrStringWidthGet &rArr; GrFontGlyphDataGet
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetDefaultMsgProc
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringWidthGet
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectFill
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextClipRegionSet
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextInit
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrLineDraw
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontBaselineGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[64]"></a>EPIAddressMapSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, epi.o(i.EPIAddressMapSet))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
</UL>

<P><STRONG><a name="[63]"></a>EPIConfigGPModeSet</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, epi.o(i.EPIConfigGPModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
</UL>

<P><STRONG><a name="[62]"></a>EPIConfigHB8Set</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, epi.o(i.EPIConfigHB8Set))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
</UL>

<P><STRONG><a name="[60]"></a>EPIConfigSDRAMSet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, epi.o(i.EPIConfigSDRAMSet))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
</UL>

<P><STRONG><a name="[5e]"></a>EPIDividerSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, epi.o(i.EPIDividerSet))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
</UL>

<P><STRONG><a name="[5f]"></a>EPIModeSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, epi.o(i.EPIModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
</UL>

<P><STRONG><a name="[de]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeSSI
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2S
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2C
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
</UL>

<P><STRONG><a name="[71]"></a>GPIOPadConfigSet</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeSSI
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BInit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2S
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2C
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOInitial
</UL>

<P><STRONG><a name="[67]"></a>GPIOPinConfigure</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortControlSet
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOInitial
</UL>

<P><STRONG><a name="[c3]"></a>GPIOPinRead</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinRead))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BInit
</UL>

<P><STRONG><a name="[75]"></a>GPIOPinTypeGPIOInput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BInit
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOInitial
</UL>

<P><STRONG><a name="[73]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_initial_clock_train
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOInitial
</UL>

<P><STRONG><a name="[72]"></a>GPIOPinTypeI2C</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeI2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeI2C
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BInit
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOInitial
</UL>

<P><STRONG><a name="[87]"></a>GPIOPinTypeI2S</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeI2S))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeI2S
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
</UL>

<P><STRONG><a name="[c9]"></a>GPIOPinTypeSSI</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeSSI))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeSSI
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_initial_clock_train
</UL>

<P><STRONG><a name="[76]"></a>GPIOPinTypeUART</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeUART
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOInitial
</UL>

<P><STRONG><a name="[c6]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DESELECT
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SELECT
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_initial_clock_train
</UL>

<P><STRONG><a name="[e9]"></a>GrCircleDraw</STRONG> (Thumb, 510 bytes, Stack size 40 bytes, circle.o(i.GrCircleDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GrCircleDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
</UL>

<P><STRONG><a name="[df]"></a>GrCircleFill</STRONG> (Thumb, 294 bytes, Stack size 32 bytes, circle.o(i.GrCircleFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GrCircleFill &rArr; GrLineDrawH
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrLineDrawH
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
</UL>

<P><STRONG><a name="[d7]"></a>GrContextClipRegionSet</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, context.o(i.GrContextClipRegionSet))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[44]"></a>GrContextFontSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, string.o(i.GrContextFontSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GrContextFontSet &rArr; UpdateContextCharMapping
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateContextCharMapping
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showMinhang2xuhui
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semesterChoose
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[4b]"></a>GrContextInit</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, context.o(i.GrContextInit))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[1e]"></a>GrDefaultStringRenderer</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, string.o(i.GrDefaultStringRenderer))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GrDefaultStringRenderer &rArr; GrFontGlyphRender
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontGlyphRender
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontGlyphDataGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> context.o(i.GrContextInit)
</UL>
<P><STRONG><a name="[dc]"></a>GrFontBaselineGet</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, string.o(i.GrFontBaselineGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GrFontBaselineGet
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[e2]"></a>GrFontGlyphDataGet</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, string.o(i.GrFontGlyphDataGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GrFontGlyphDataGet
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringWidthGet
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrDefaultStringRenderer
</UL>

<P><STRONG><a name="[e3]"></a>GrFontGlyphRender</STRONG> (Thumb, 646 bytes, Stack size 64 bytes, string.o(i.GrFontGlyphRender))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GrFontGlyphRender
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrDefaultStringRenderer
</UL>

<P><STRONG><a name="[db]"></a>GrFontHeightGet</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, string.o(i.GrFontHeightGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GrFontHeightGet
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
</UL>

<P><STRONG><a name="[46]"></a>GrImageDraw</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, image.o(i.GrImageDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalImageDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;schoolBusPicture
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[dd]"></a>GrLineDraw</STRONG> (Thumb, 636 bytes, Stack size 40 bytes, line.o(i.GrLineDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GrLineDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
</UL>

<P><STRONG><a name="[e0]"></a>GrLineDrawH</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, line.o(i.GrLineDrawH))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GrLineDrawH
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrCircleFill
</UL>

<P><STRONG><a name="[e5]"></a>GrLineDrawV</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, line.o(i.GrLineDrawV))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GrLineDrawV
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
</UL>

<P><STRONG><a name="[27]"></a>GrMapISO8859_1_Unicode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, charmap.o(i.GrMapISO8859_1_Unicode))
<BR>[Address Reference Count : 1]<UL><LI> context.o(.constdata)
</UL>
<P><STRONG><a name="[d9]"></a>GrRectDraw</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, rectangle.o(i.GrRectDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GrRectDraw &rArr; GrLineDrawV
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrLineDrawV
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrLineDrawH
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[d8]"></a>GrRectFill</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, rectangle.o(i.GrRectFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GrRectFill
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[45]"></a>GrStringDraw</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, string.o(i.GrStringDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GrStringDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showMinhang2xuhui
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semesterChoose
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[da]"></a>GrStringWidthGet</STRONG> (Thumb, 192 bytes, Stack size 64 bytes, string.o(i.GrStringWidthGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GrStringWidthGet &rArr; GrFontGlyphDataGet
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontGlyphDataGet
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[7b]"></a>I2CMasterBusy</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, i2c.o(i.I2CMasterBusy))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterTransmit_Burst_2Bytes
</UL>

<P><STRONG><a name="[7a]"></a>I2CMasterControl</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, i2c.o(i.I2CMasterControl))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BWriteRegister
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterTransmit_Burst_2Bytes
</UL>

<P><STRONG><a name="[79]"></a>I2CMasterDataPut</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, i2c.o(i.I2CMasterDataPut))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BWriteRegister
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterTransmit_Burst_2Bytes
</UL>

<P><STRONG><a name="[7d]"></a>I2CMasterEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, i2c.o(i.I2CMasterEnable))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0MasterInitial
</UL>

<P><STRONG><a name="[5b]"></a>I2CMasterErr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, i2c.o(i.I2CMasterErr))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BWriteRegister
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterTransmit_Burst_2Bytes
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROMReadPolled
</UL>

<P><STRONG><a name="[7c]"></a>I2CMasterInitExpClk</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, i2c.o(i.I2CMasterInitExpClk))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BInit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0MasterInitial
</UL>

<P><STRONG><a name="[c1]"></a>I2CMasterIntClear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, i2c.o(i.I2CMasterIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BWriteRegister
</UL>

<P><STRONG><a name="[c0]"></a>I2CMasterIntStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, i2c.o(i.I2CMasterIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BWriteRegister
</UL>

<P><STRONG><a name="[78]"></a>I2CMasterSlaveAddrSet</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, i2c.o(i.I2CMasterSlaveAddrSet))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BWriteRegister
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterTransmit_Burst_2Bytes
</UL>

<P><STRONG><a name="[8a]"></a>I2SIntClear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, i2s.o(i.I2SIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundIntHandler
</UL>

<P><STRONG><a name="[8e]"></a>I2SIntStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, i2s.o(i.I2SIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundIntHandler
</UL>

<P><STRONG><a name="[90]"></a>I2SMasterClockSelect</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, i2s.o(i.I2SMasterClockSelect))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundSetFormat
</UL>

<P><STRONG><a name="[92]"></a>I2SRxConfigSet</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, i2s.o(i.I2SRxConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundSetFormat
</UL>

<P><STRONG><a name="[98]"></a>I2SRxEnable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, i2s.o(i.I2SRxEnable), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundBufferRead
</UL>

<P><STRONG><a name="[8c]"></a>I2SRxFIFOLimitSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, i2s.o(i.I2SRxFIFOLimitSet))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
</UL>

<P><STRONG><a name="[91]"></a>I2STxConfigSet</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, i2s.o(i.I2STxConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundSetFormat
</UL>

<P><STRONG><a name="[85]"></a>I2STxDisable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, i2s.o(i.I2STxDisable))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BufferCallback
</UL>

<P><STRONG><a name="[84]"></a>I2STxEnable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, i2s.o(i.I2STxEnable))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundBufferPlay
</UL>

<P><STRONG><a name="[89]"></a>I2STxFIFOLimitSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, i2s.o(i.I2STxFIFOLimitSet))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
</UL>

<P><STRONG><a name="[8d]"></a>I2STxRxEnable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, i2s.o(i.I2STxRxEnable))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
</UL>

<P><STRONG><a name="[36]"></a>IntDisable</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, interrupt.o(i.IntDisable))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundBufferRead
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundBufferPlay
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WavePlay
</UL>

<P><STRONG><a name="[39]"></a>IntEnable</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundBufferRead
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundBufferPlay
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WavePlay
</UL>

<P><STRONG><a name="[6]"></a>RadioButtonMsgProc</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, radiobutton.o(i.RadioButtonMsgProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = RadioButtonMsgProc &rArr; RadioButtonClick &rArr; RadioButtonPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetDefaultMsgProc
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonClick
</UL>
<BR>[Address Reference Count : 2]<UL><LI> main.o(.data)
<LI> radiobutton.o(i.RadioButtonClick)
</UL>
<P><STRONG><a name="[1]"></a>RectangularButtonMsgProc</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, pushbutton.o(i.RectangularButtonMsgProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = RectangularButtonMsgProc &rArr; RectangularButtonPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetDefaultMsgProc
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[cb]"></a>SSIConfigSetExpClk</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, ssi.o(i.SSIConfigSetExpClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SSIConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[c8]"></a>SSIDataGet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ssi.o(i.SSIDataGet))
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGet
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGet
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_spi
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_initial_clock_train
</UL>

<P><STRONG><a name="[c7]"></a>SSIDataPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ssi.o(i.SSIDataPut))
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_spi
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_initial_clock_train
</UL>

<P><STRONG><a name="[d4]"></a>SSIDisable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ssi.o(i.SSIDisable))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[cc]"></a>SSIEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ssi.o(i.SSIEnable))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[49]"></a>SysCtlClockGet</STRONG> (Thumb, 514 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BInit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterSpeedSet
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Initial
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0MasterInitial
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>SysCtlI2SMClkSet</STRONG> (Thumb, 204 bytes, Stack size 4 bytes, sysctl.o(i.SysCtlI2SMClkSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SysCtlI2SMClkSet
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundSetFormat
</UL>

<P><STRONG><a name="[6b]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BInit
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Initial
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0MasterInitial
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOInitial
</UL>

<P><STRONG><a name="[86]"></a>SysCtlPeripheralReset</STRONG> (Thumb, 110 bytes, Stack size 4 bytes, sysctl.o(i.SysCtlPeripheralReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SysCtlPeripheralReset
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
</UL>

<P><STRONG><a name="[6a]"></a>SysTickIntEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickInitial
</UL>

<P><STRONG><a name="[69]"></a>SysTickPeriodSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(i.SysTickPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickInitial
</UL>

<P><STRONG><a name="[70]"></a>UARTCharGet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharGet))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStringGet
</UL>

<P><STRONG><a name="[6f]"></a>UARTCharPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharPut))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStringPut
</UL>

<P><STRONG><a name="[6d]"></a>UARTConfigSetExpClk</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, uart.o(i.UARTConfigSetExpClk))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Initial
</UL>

<P><STRONG><a name="[6c]"></a>UARTDisable</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, uart.o(i.UARTDisable))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTDisable
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Initial
</UL>

<P><STRONG><a name="[6e]"></a>UARTEnable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart.o(i.UARTEnable))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Initial
</UL>

<P><STRONG><a name="[3f]"></a>WidgetAdd</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, widget.o(i.WidgetAdd))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecardQueryButtonClick
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;busQueryButtonClick
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;booksQueryButtonClick
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scoreQueryButtonClick
</UL>

<P><STRONG><a name="[f]"></a>WidgetDefaultMsgProc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widget.o(i.WidgetDefaultMsgProc))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonMsgProc
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonMsgProc
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget.o(.data)
</UL>
<P><STRONG><a name="[42]"></a>WidgetMessageQueueAdd</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, widget.o(i.WidgetMessageQueueAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WidgetMessageQueueAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMutexGet
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetPointerMessage
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecardQueryButtonClick
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;busQueryButtonClick
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showNextBook
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showBooksData
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;booksQueryButtonClick
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scoreQueryButtonClick
</UL>

<P><STRONG><a name="[3b]"></a>WidgetMessageQueueProcess</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, widget.o(i.WidgetMessageQueueProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WidgetMessageQueueProcess &rArr; WidgetMessageSendPostOrder
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageSendPostOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WavePlay
</UL>

<P><STRONG><a name="[ec]"></a>WidgetMessageSendPostOrder</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, widget.o(i.WidgetMessageSendPostOrder))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WidgetMessageSendPostOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueProcess
</UL>

<P><STRONG><a name="[18]"></a>WidgetPointerMessage</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, widget.o(i.WidgetPointerMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WidgetPointerMessage &rArr; WidgetMessageQueueAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[40]"></a>WidgetRemove</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, widget.o(i.WidgetRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WidgetRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecardQueryButtonClick
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;busQueryButtonClick
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;booksQueryButtonClick
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scoreQueryButtonClick
</UL>

<P><STRONG><a name="[ed]"></a>__0sprintf$0</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printf0.o(i.__0sprintf$0), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[100]"></a>__1sprintf$0</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf0.o(i.__0sprintf$0), UNUSED)

<P><STRONG><a name="[43]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf0.o(i.__0sprintf$0))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecardQueryButtonClick
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scoreQueryButtonClick
</UL>

<P><STRONG><a name="[101]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[102]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[103]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[8b]"></a>uDMAChannelAttributeDisable</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, udma.o(i.uDMAChannelAttributeDisable))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
</UL>

<P><STRONG><a name="[94]"></a>uDMAChannelAttributeEnable</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, udma.o(i.uDMAChannelAttributeEnable))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundBufferRead
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundSetFormat
</UL>

<P><STRONG><a name="[95]"></a>uDMAChannelControlSet</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, udma.o(i.uDMAChannelControlSet))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundSetFormat
</UL>

<P><STRONG><a name="[83]"></a>uDMAChannelEnable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, udma.o(i.uDMAChannelEnable))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundBufferRead
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundBufferPlay
</UL>

<P><STRONG><a name="[8f]"></a>uDMAChannelModeGet</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, udma.o(i.uDMAChannelModeGet))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundIntHandler
</UL>

<P><STRONG><a name="[82]"></a>uDMAChannelTransferSet</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, udma.o(i.uDMAChannelTransferSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uDMAChannelTransferSet
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundBufferRead
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundBufferPlay
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[11]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>PopulateFileListBox</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = PopulateFileListBox &rArr; f_opendir &rArr; trace_path &rArr; next_dir_entry &rArr; get_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d]"></a>WriteDataGPIO</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WriteDataGPIO
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>WriteDataEPI</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.text)
</UL>
<P><STRONG><a name="[1a]"></a>WriteCommandEPI</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.text)
</UL>
<P><STRONG><a name="[1b]"></a>WriteDataFPGA</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.text)
</UL>
<P><STRONG><a name="[1c]"></a>WriteCommandFPGA</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.text)
</UL>
<P><STRONG><a name="[e]"></a>WriteCommandGPIO</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WriteCommandGPIO
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.data)
</UL>
<P><STRONG><a name="[59]"></a>InitGPIOLCDInterface</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = InitGPIOLCDInterface
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kitronix320x240x16_SSD2119Init
</UL>

<P><STRONG><a name="[20]"></a>Kitronix320x240x16_SSD2119PixelDraw</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Kitronix320x240x16_SSD2119PixelDraw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.constdata)
</UL>
<P><STRONG><a name="[21]"></a>Kitronix320x240x16_SSD2119PixelDrawMultiple</STRONG> (Thumb, 326 bytes, Stack size 40 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Kitronix320x240x16_SSD2119PixelDrawMultiple
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.constdata)
</UL>
<P><STRONG><a name="[22]"></a>Kitronix320x240x16_SSD2119LineDrawH</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Kitronix320x240x16_SSD2119LineDrawH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.constdata)
</UL>
<P><STRONG><a name="[23]"></a>Kitronix320x240x16_SSD2119LineDrawV</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Kitronix320x240x16_SSD2119LineDrawV
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.constdata)
</UL>
<P><STRONG><a name="[24]"></a>Kitronix320x240x16_SSD2119RectFill</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Kitronix320x240x16_SSD2119RectFill
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.constdata)
</UL>
<P><STRONG><a name="[25]"></a>Kitronix320x240x16_SSD2119ColorTranslate</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.constdata)
</UL>
<P><STRONG><a name="[26]"></a>Kitronix320x240x16_SSD2119Flush</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>EEPROMReadPolled</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, set_pinout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EEPROMReadPolled
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterErr
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaughterBoardTypeGet
</UL>

<P><STRONG><a name="[5d]"></a>EPIDividerFromRate</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, set_pinout.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
</UL>

<P><STRONG><a name="[5c]"></a>EPIPinConfigSet</STRONG> (Thumb, 336 bytes, Stack size 48 bytes, set_pinout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EPIPinConfigSet &rArr; HB8ConfigGet
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIModeSet
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIDividerSet
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIConfigSDRAMSet
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIConfigHB8Set
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIConfigGPModeSet
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIAddressMapSet
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HB8ConfigGet
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIDividerFromRate
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinoutSet
</UL>

<P><STRONG><a name="[65]"></a>DaughterBoardTypeGet</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, set_pinout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DaughterBoardTypeGet &rArr; EEPROMReadPolled
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROMReadPolled
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinoutSet
</UL>

<P><STRONG><a name="[61]"></a>HB8ConfigGet</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, set_pinout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HB8ConfigGet
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
</UL>

<P><STRONG><a name="[66]"></a>PortControlSet</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, set_pinout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PortControlSet
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinoutSet
</UL>

<P><STRONG><a name="[68]"></a>TouchScreenDebouncer</STRONG> (Thumb, 260 bytes, Stack size 32 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TouchScreenDebouncer
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenIntHandler
</UL>

<P><STRONG><a name="[80]"></a>SoundNextTone</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, sound.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PatternNext
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundPlay
</UL>

<P><STRONG><a name="[1d]"></a>BufferCallback</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, sound.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BufferCallback &rArr; SoundBufferPlay &rArr; uDMAChannelTransferSet
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2STxDisable
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundBufferPlay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sound.o(.text)
</UL>
<P><STRONG><a name="[81]"></a>PatternNext</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, sound.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundNextTone
</UL>

<P><STRONG><a name="[9c]"></a>move_window</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reserve_direntry
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_path
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_cluster
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cluster
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[9f]"></a>sync</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = sync &rArr; disk_ioctl &rArr; power_on &rArr; send_initial_clock_train &rArr; GPIOPinTypeSSI
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[a1]"></a>get_cluster</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = get_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_dir_entry
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>

<P><STRONG><a name="[a2]"></a>put_cluster</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = put_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
</UL>

<P><STRONG><a name="[a3]"></a>remove_chain</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = remove_chain &rArr; put_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_cluster
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cluster
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[a4]"></a>create_chain</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = create_chain &rArr; put_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_cluster
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cluster
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reserve_direntry
</UL>

<P><STRONG><a name="[a5]"></a>next_dir_entry</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = next_dir_entry &rArr; get_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cluster
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reserve_direntry
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_path
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[b7]"></a>get_fileinfo</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_fileinfo
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[a7]"></a>trace_path</STRONG> (Thumb, 194 bytes, Stack size 48 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = trace_path &rArr; next_dir_entry &rArr; get_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_dirfile
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_dir_entry
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[aa]"></a>reserve_direntry</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = reserve_direntry &rArr; create_chain &rArr; put_cluster &rArr; move_window &rArr; disk_write &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_dir_entry
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[ac]"></a>check_fs</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = check_fs &rArr; disk_read &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_mount
</UL>

<P><STRONG><a name="[ad]"></a>auto_mount</STRONG> (Thumb, 324 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = auto_mount &rArr; disk_initialize &rArr; power_on &rArr; send_initial_clock_train &rArr; GPIOPinTypeSSI
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[a6]"></a>clust2sect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reserve_direntry
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_path
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_dir_entry
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>

<P><STRONG><a name="[a8]"></a>make_dirfile</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = make_dirfile
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_path
</UL>

<P><STRONG><a name="[b2]"></a>validate</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = validate
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>

<P><STRONG><a name="[bf]"></a>TLV320AIC23BWriteRegister</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, tlv320aic23b.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TLV320AIC23BWriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterIntStatus
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterIntClear
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterSlaveAddrSet
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterDataPut
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterControl
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterErr
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BLineInVolumeSet
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BInit
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLV320AIC23BHeadPhoneVolumeSet
</UL>

<P><STRONG><a name="[c4]"></a>send_initial_clock_train</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, mmc-dk-lm3s9b96.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = send_initial_clock_train &rArr; GPIOPinTypeSSI
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGet
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeSSI
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DESELECT
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[ca]"></a>power_on</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, mmc-dk-lm3s9b96.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = power_on &rArr; send_initial_clock_train &rArr; GPIOPinTypeSSI
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIEnable
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIConfigSetExpClk
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeSSI
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_initial_clock_train
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[cd]"></a>rcvr_datablock</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, mmc-dk-lm3s9b96.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rcvr_datablock &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[cf]"></a>xmit_datablock</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, mmc-dk-lm3s9b96.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ready
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[d2]"></a>send_cmd</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, mmc-dk-lm3s9b96.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ready
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[d3]"></a>SELECT</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mmc-dk-lm3s9b96.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SELECT
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[c5]"></a>DESELECT</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mmc-dk-lm3s9b96.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_initial_clock_train
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[d1]"></a>xmit_spi</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, mmc-dk-lm3s9b96.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xmit_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGet
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_datablock
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[ce]"></a>rcvr_spi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, mmc-dk-lm3s9b96.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGet
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ready
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_datablock
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_datablock
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[d0]"></a>wait_ready</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mmc-dk-lm3s9b96.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_datablock
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[e4]"></a>InternalImageDraw</STRONG> (Thumb, 848 bytes, Stack size 112 bytes, image.o(i.InternalImageDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PixelTransparentDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrImageDraw
</UL>

<P><STRONG><a name="[e6]"></a>PixelTransparentDraw</STRONG> (Thumb, 676 bytes, Stack size 72 bytes, image.o(i.PixelTransparentDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = PixelTransparentDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalImageDraw
</UL>

<P><STRONG><a name="[ea]"></a>RectangularButtonPaint</STRONG> (Thumb, 404 bytes, Stack size 80 bytes, pushbutton.o(i.RectangularButtonPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = RectangularButtonPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringWidthGet
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectFill
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextClipRegionSet
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrImageDraw
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextInit
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontBaselineGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonMsgProc
</UL>

<P><STRONG><a name="[e7]"></a>RadioButtonClick</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, radiobutton.o(i.RadioButtonClick))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = RadioButtonClick &rArr; RadioButtonPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonMsgProc
</UL>

<P><STRONG><a name="[e8]"></a>RadioButtonPaint</STRONG> (Thumb, 490 bytes, Stack size 72 bytes, radiobutton.o(i.RadioButtonPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = RadioButtonPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectFill
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontHeightGet
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextClipRegionSet
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrImageDraw
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextInit
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrCircleFill
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrCircleDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonMsgProc
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonClick
</UL>

<P><STRONG><a name="[e1]"></a>UpdateContextCharMapping</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, string.o(i.UpdateContextCharMapping))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UpdateContextCharMapping
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
</UL>

<P><STRONG><a name="[ee]"></a>_printf_core</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf0.o(i._printf_core), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$0
</UL>

<P><STRONG><a name="[1f]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf0.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf0.o(i.__0sprintf$0)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
